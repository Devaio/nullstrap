// Generated by CoffeeScript 1.6.2
(function() {
  var socket, _ref, _ref1;

  socket = io.connect();

  window.BelayCapital = (_ref = window.BelayCapital) != null ? _ref : {};

  window.BelayCapital.views = (_ref1 = window.BelayCapital.views) != null ? _ref1 : {};

  jQuery(function() {
    var App;

    App = (function() {
      function App() {
        this.gs = window.BelayCapital;
        this.gs.views.Settings = new window.BelayCapital.views.Settings;
      }

      App.prototype.unrender = function() {
        var i, views, _results;

        views = this.gs.views;
        _results = [];
        for (i in views) {
          _results.push(views[i].unrender());
        }
        return _results;
      };

      App.prototype.attachEvents = function() {
        $('#signup-form').submit(function(e) {
          var data, err, form, passwords;

          form = $(this);
          data = form.serialize();
          passwords = form.find('[type="password"]');
          err = $('#signup-error');
          if (passwords.eq(0).val() !== passwords.eq(1).val()) {
            err.html('Passwords don\'t match!');
            return e.preventDefault();
          } else {
            return $(this).submit();
          }
        });
        return socket.on('hello', function(data) {
          return console.log(data);
        });
      };

      App.prototype.registerPartials = function() {
        var i, key, _results;

        _results = [];
        for (i in Handlebars.templates) {
          key = i.split('-')[0];
          if (key === 'partial') {
            _results.push(Handlebars.registerPartial(i, Handlebars.templates[i]));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };

      return App;

    })();
    window.BelayCapital.App = new App();
    window.BelayCapital.App.registerPartials();
    window.BelayCapital.App.attachEvents();
    return Backbone.history.start();
  });

}).call(this);
